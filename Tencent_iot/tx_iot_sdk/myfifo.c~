#include <unistd.h>  
#include <stdlib.h>  
#include <fcntl.h>  
#include <limits.h>  
#include <sys/types.h>  
#include <sys/stat.h>  
#include <stdio.h>  
#include <string.h>  
#include "myfifo.h"
int pipe_fd = -1;  
int data_fd = -1;  
int res = 0;  
int bytes_sent = 0; 
char *fifoname="/tmp/iot_msg_fifo";
char buffer[1000];  
 
int fifo_init(const char * fifo_name)  
{
/*
    if(access(fifo_name, F_OK) == -1)  
    {  
        res = mkfifo(fifo_name, 0777);  
        if(res != 0)  
        {  
            fprintf(stderr, "Could not create fifo %s\n", fifo_name);  
            return -1; 
        }  
    }  
  
    printf("Process %d opening FIFO O_WRONLY,file_name=%s\n", getpid(),fifo_name);  
*/    //以只写阻塞方式打开FIFO文件，以只读方式打开数据文件  
    pipe_fd = open(fifo_name, O_WRONLY);  
    printf("Process %d result %d\n", getpid(), pipe_fd);  
    return 0;
}
int fifo_send(char *msg)
{
    if(pipe_fd != -1)  
    {       
            printf("begin write to fifo\r\n");
	    res = write(pipe_fd, msg, strlen(msg));  
	    if(res == -1)  
	    {  
		fprintf(stderr, "Write error on pipe\n");  
		exit(EXIT_FAILURE);  
	    }  
    }else printf("err while write to fifo\r\n");
}

